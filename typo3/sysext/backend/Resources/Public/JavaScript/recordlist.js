/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import Icons from"@typo3/backend/icons.js";import PersistentStorage from"@typo3/backend/storage/persistent.js";import RegularEvent from"@typo3/core/event/regular-event.js";import DocumentService from"@typo3/core/document-service.js";import{MultiRecordSelectionSelectors}from"@typo3/backend/multi-record-selection.js";import{selector}from"@typo3/core/literals.js";class Recordlist{constructor(){this.identifier={entity:".t3js-entity",toggle:".t3js-toggle-recordlist",localize:".t3js-action-localize",editMultiple:".t3js-record-edit-multiple",icons:{collapse:"actions-view-list-collapse",expand:"actions-view-list-expand"}},this.toggleClick=(e,t)=>{e.preventDefault();const i=t.dataset.table,o=document.querySelector(t.dataset.bsTarget),n="expanded"===o.dataset.state,l=t.querySelector(".t3js-icon"),r=n?this.identifier.icons.expand:this.identifier.icons.collapse;Icons.getIcon(r,Icons.sizes.small).then((e=>{l.replaceWith(document.createRange().createContextualFragment(e))}));let a={};PersistentStorage.isset("moduleData.web_list.collapsedTables")&&(a=PersistentStorage.get("moduleData.web_list.collapsedTables"));const s={};s[i]=n?1:0,a=Object.assign(a,s),PersistentStorage.set("moduleData.web_list.collapsedTables",a).then((()=>{o.dataset.state=n?"collapsed":"expanded"}))},this.onEditMultiple=(e,t)=>{e.preventDefault();let i="",o="",n=[];const l=[];if("multiRecordSelection:action:edit"===e.type){const t=e.detail,r=t.configuration;if(o=r.returnUrl||"",n=r.columnsOnly||[],i=r.tableName||"",""===i)return;t.checkboxes.forEach((e=>{const t=e.closest(MultiRecordSelectionSelectors.elementSelector);null!==t&&t.dataset[r.idField]&&l.push(t.dataset[r.idField])}))}else{const e=t.closest("[data-table]");if(null===e)return;if(i=e.dataset.table||"",""===i)return;o=t.dataset.returnUrl||"",n=JSON.parse(t.dataset.columnsOnly||"{}");const r=e.querySelectorAll(this.identifier.entity+'[data-uid][data-table="'+i+'"] td.col-checkbox input[type="checkbox"]:checked');if(r.length)r.forEach((e=>{l.push(e.closest(this.identifier.entity+selector`[data-uid][data-table="${i}"]`).dataset.uid)}));else{const t=e.querySelectorAll(this.identifier.entity+selector`[data-uid][data-table="${i}"]`);if(!t.length)return;t.forEach((e=>{l.push(e.dataset.uid)}))}}if(!l.length)return;let r=top.TYPO3.settings.FormEngine.moduleUrl+"&edit["+i+"]["+l.join(",")+"]=edit&returnUrl="+Recordlist.getReturnUrl(o);n.length>0&&(r+=n.map(((e,t)=>"&columnsOnly["+i+"]["+t+"]="+e)).join("")),window.location.href=r},this.disableButton=(e,t)=>{t.setAttribute("disabled","disabled"),t.classList.add("disabled")},this.registerPaginationEvents=()=>{document.querySelectorAll(".t3js-recordlist-paging").forEach((e=>{e.addEventListener("keyup",(t=>{t.preventDefault();let i=Number(e.value);const o=Number(e.min),n=Number(e.max);if(o&&i<o&&(i=o),n&&i>n&&(i=n),e.value=i.toString(10),"Enter"===t.key&&i!==Number(e.dataset.currentpage)){const t=e.closest('form[name^="list-table-form-"]'),o=new URL(t.action,window.origin);o.searchParams.set("pointer",i.toString()),window.location.href=o.toString()}}))}))},new RegularEvent("click",this.toggleClick).delegateTo(document,this.identifier.toggle),new RegularEvent("click",this.onEditMultiple).delegateTo(document,this.identifier.editMultiple),new RegularEvent("click",this.disableButton).delegateTo(document,this.identifier.localize),DocumentService.ready().then((()=>{this.registerPaginationEvents()})),new RegularEvent("multiRecordSelection:action:edit",this.onEditMultiple).bindTo(document),new RegularEvent("multiRecordSelection:action:copyMarked",(e=>{Recordlist.submitClipboardFormWithCommand("copyMarked",e.target)})).bindTo(document),new RegularEvent("multiRecordSelection:action:removeMarked",(e=>{Recordlist.submitClipboardFormWithCommand("removeMarked",e.target)})).bindTo(document)}static submitClipboardFormWithCommand(e,t){const i=t.closest("form");if(!i)return;const o=i.querySelector('input[name="cmd"]');o&&(o.value=e,i.submit())}static getReturnUrl(e){return""===e&&(e=top.list_frame.document.location.pathname+top.list_frame.document.location.search),encodeURIComponent(e)}}export default new Recordlist;