/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import{BroadcastMessage}from"@typo3/backend/broadcast-message.js";import AjaxRequest from"@typo3/core/ajax/ajax-request.js";import DocumentService from"@typo3/core/document-service.js";import BroadcastService from"@typo3/backend/broadcast-service.js";import Icons from"@typo3/backend/icons.js";import Notification from"@typo3/backend/notification.js";import RegularEvent from"@typo3/core/event/regular-event.js";var Identifiers;!function(e){e.hide='button[data-datahandler-action="visibility"]',e.icon=".t3js-icon"}(Identifiers||(Identifiers={}));class AjaxDataHandler{constructor(){DocumentService.ready().then((()=>{this.initialize()}))}static refreshPageTree(){top.document.dispatchEvent(new CustomEvent("typo3:pagetree:refresh"))}static call(e){return new AjaxRequest(TYPO3.settings.ajaxUrls.record_process).withQueryArguments(e).get().then((async e=>await e.resolve()))}process(e,t){return AjaxDataHandler.call(e).then((e=>{if(e.hasErrors&&this.handleErrors(e),t){const a={...t,hasErrors:e.hasErrors},r=new BroadcastMessage("datahandler","process",a);BroadcastService.post(r);const s=new CustomEvent("typo3:datahandler:process",{detail:{payload:a}});document.dispatchEvent(s)}return e}))}initialize(){new RegularEvent("click",((e,t)=>{e.preventDefault(),this.handleVisibilityToggle(t)})).delegateTo(document,Identifiers.hide)}handleVisibilityToggle(e){const t=e.closest("tr[data-uid]"),a=e.querySelector(Identifiers.icon);this._showSpinnerIcon(a);const r="visible"===e.dataset.datahandlerStatus,s={table:e.dataset.datahandlerTable,uid:e.dataset.datahandlerUid,field:e.dataset.datahandlerField,visible:r,overlayIcon:r?e.dataset.datahandlerRecordHiddenOverlayIcon??"overlay-hidden":e.dataset.datahandlerRecordVisibleOverlayIcon??null},n={data:{[s.table]:{[s.uid]:{[s.field]:s.visible?e.dataset.datahandlerHiddenValue:e.dataset.datahandlerVisibleValue}}}};this.process(n).then((a=>{if(!a.hasErrors){s.visible=!s.visible,e.setAttribute("data-datahandler-status",s.visible?"visible":"hidden");const a=s.visible?e.dataset.datahandlerVisibleLabel:e.dataset.datahandlerHiddenLabel;e.setAttribute("title",a);const r=s.visible?e.dataset.datahandlerVisibleIcon:e.dataset.datahandlerHiddenIcon,n=e.querySelector(Identifiers.icon);Icons.getIcon(r,Icons.sizes.small).then((e=>{n.replaceWith(document.createRange().createContextualFragment(e))}));const i=t.querySelector(".col-icon "+Identifiers.icon);i.querySelector(".icon-overlay")?.remove(),Icons.getIcon("miscellaneous-placeholder",Icons.sizes.small,s.overlayIcon).then((e=>{const t=document.createRange().createContextualFragment(e);i.append(t.querySelector(".icon-overlay"))}));const o=new RegularEvent("animationend",(()=>{t.classList.remove("record-pulse"),o.release()}));o.bindTo(t),t.classList.add("record-pulse"),"pages"===s.table&&AjaxDataHandler.refreshPageTree()}}))}handleErrors(e){for(const t of e.messages)Notification.error(t.title,t.message)}_showSpinnerIcon(e){Icons.getIcon("spinner-circle",Icons.sizes.small).then((t=>{e.replaceWith(document.createRange().createContextualFragment(t))}))}}export default new AjaxDataHandler;