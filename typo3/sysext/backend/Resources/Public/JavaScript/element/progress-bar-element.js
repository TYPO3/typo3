/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import{LitElement as b,css as m,nothing as i,html as g}from"lit";import{property as c,customElement as v}from"lit/decorators.js";import{classMap as u}from"lit/directives/class-map.js";import{styleMap as h}from"lit/directives/style-map.js";import f from"@typo3/backend/severity.js";import"@typo3/backend/enum/severity.js";var n=function(l,e,o,r){var s=arguments.length,t=s<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,o):r,p;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")t=Reflect.decorate(l,e,o,r);else for(var d=l.length-1;d>=0;d--)(p=l[d])&&(t=(s<3?p(t):s>3?p(e,o,t):p(e,o))||t);return s>3&&t&&Object.defineProperty(e,o,t),t};let a=class extends b{constructor(){super(...arguments),this.value=void 0,this.max=100,this.severity=void 0}static{this.styles=m`@keyframes progress-indeterminate{0%{inset-inline-start:-33%}to{inset-inline-start:100%}}:host{--progress-bar-height:4px;--progress-bar-color-primary:var(--typo3-state-primary-border-color);--progress-bar-color-success:var(--typo3-state-success-border-color);--progress-bar-color-warning:var(--typo3-state-warning-border-color);--progress-bar-color-danger:var(--typo3-state-danger-border-color);--progress-bar-color-info:var(--typo3-state-info-border-color);--progress-bar-color:var(--progress-bar-color-primary);--progress-track-color:light-dark(var(--token-color-neutral-20),var(--token-color-neutral-80));--progress-border-radius:var(--typo3-component-border-radius);display:block;width:100%;border-radius:var(--progress-border-radius)}.progress{position:relative;overflow:hidden;height:var(--progress-bar-height);border-radius:var(--progress-border-radius)}.value{display:block;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}.track{background:var(--progress-track-color);inset:0}.bar{background:var(--progress-bar-color);transition:width .5s ease-in-out;&.bar-success{--progress-bar-color:var(--progress-bar-color-success)}&.bar-warning{--progress-bar-color:var(--progress-bar-color-warning)}&.bar-danger{--progress-bar-color:var(--progress-bar-color-danger)}&.bar-info{--progress-bar-color:var(--progress-bar-color-info)}&.indeterminate{animation-name:progress-indeterminate;animation-duration:3s;animation-iteration-count:infinite;animation-timing-function:linear;width:33%;background-image:linear-gradient(to right,var(--progress-track-color) 0,transparent 50%,var(--progress-track-color) 100%)}}.bar,.track{position:absolute;height:var(--progress-bar-height)}.label{margin-top:.5rem}`}render(){const e="progress-label-"+(Math.random()+1).toString(36).substring(2),o=this.label!==void 0&&this.label,r=isNaN(this.value),s=u({bar:!0,["bar-"+f.getCssClass(this.severity)]:!r&&this.severity!==void 0,indeterminate:r}),t=r?i:h({width:(this.clamp(this.value,0,this.max)/this.max*100).toString()+"%"});return g`<div class=progress-wrapper><div role=progressbar class=progress aria-valuenow=${r?i:this.value} aria-valuemin=0 aria-valuemax=${this.max} aria-describedby=${o?e:i}><div class=track></div><div class=${s} style=${t}>${r?i:g`<span class=value>${this.value}%</span>`}</div></div>${o?g`<div class=label id=${e}>${this.label}</div>`:i}</div>`}clamp(e,o,r){return Math.min(r,Math.max(o,e))}};n([c({type:Number,reflect:!0})],a.prototype,"value",void 0),n([c({type:Number,reflect:!0})],a.prototype,"max",void 0),n([c({type:Number,reflect:!0})],a.prototype,"severity",void 0),n([c({type:String,reflect:!0})],a.prototype,"label",void 0),a=n([v("typo3-backend-progress-bar")],a);export{a as ProgressBarElement};
