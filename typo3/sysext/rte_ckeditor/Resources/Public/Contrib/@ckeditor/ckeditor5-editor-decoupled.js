import{ElementApiMixin as d,Editor as c,secureSourceElement as u}from"@ckeditor/ckeditor5-core";import{CKEditorError as a,getDataFromElement as h}from"@ckeditor/ckeditor5-utils";import{EditorUI as g,EditorUIView as f,ToolbarView as b,MenuBarView as m,InlineEditableUIView as w}from"@ckeditor/ckeditor5-ui";import{enablePlaceholder as p}from"@ckeditor/ckeditor5-engine";/**
* @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
* For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
*/class y extends g{view;constructor(t,i){super(t),this.view=i}init(){const t=this.editor,i=this.view,n=t.editing.view,o=i.editable,r=n.document.getRoot();o.name=r.rootName,i.render();const l=o.element;this.setEditableElement(o.name,l),i.editable.bind("isFocused").to(this.focusTracker),n.attachDomRoot(l),this._initPlaceholder(),this._initToolbar(),this.initMenuBar(this.view.menuBarView),this.fire("ready")}destroy(){super.destroy();const t=this.view,i=this.editor.editing.view;i.getDomRoot(t.editable.name)&&i.detachDomRoot(t.editable.name),t.destroy()}_initToolbar(){const t=this.editor,i=this.view;i.toolbar.fillFromConfig(t.config.get("toolbar"),this.componentFactory),this.addToolbar(i.toolbar)}_initPlaceholder(){const t=this.editor,i=t.editing.view,n=i.document.getRoot(),o=t.config.get("placeholder");if(o){const r=typeof o=="string"?o:o[n.rootName];r&&(n.placeholder=r)}p({view:i,element:n,isDirectHost:!1,keepOnFocus:!0})}}/**
* @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
* For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
*/class E extends f{toolbar;editable;menuBarView;constructor(t,i,n={}){super(t),this.toolbar=new b(t,{shouldGroupWhenFull:n.shouldToolbarGroupWhenFull}),this.menuBarView=new m(t),this.editable=new w(t,i,n.editableElement,{label:n.label}),this.toolbar.extendTemplate({attributes:{class:["ck-reset_all","ck-rounded-corners"],dir:t.uiLanguageDirection}}),this.menuBarView.extendTemplate({attributes:{class:["ck-reset_all","ck-rounded-corners"],dir:t.uiLanguageDirection}})}render(){super.render(),this.registerChild([this.menuBarView,this.toolbar,this.editable])}}function T(e){return typeof e=="object"&&e!==null}function V(e){if(typeof e!="object"||e==null)return!1;if(Object.getPrototypeOf(e)===null)return!0;if(Object.prototype.toString.call(e)!=="[object Object]"){const i=e[Symbol.toStringTag];return i==null||!Object.getOwnPropertyDescriptor(e,Symbol.toStringTag)?.writable?!1:e.toString()===`[object ${i}]`}let t=e;for(;Object.getPrototypeOf(t)!==null;)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function v(e){return T(e)&&e.nodeType===1&&!V(e)}/**
* @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
* For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
*/class P extends d(c){static get editorName(){return"DecoupledEditor"}ui;constructor(t,i={}){if(!s(t)&&i.initialData!==void 0)throw new a("editor-create-initial-data",null);super(i),this.config.get("initialData")===void 0&&this.config.set("initialData",R(t)),s(t)&&(this.sourceElement=t,u(this,t)),this.model.document.createRoot();const n=!this.config.get("toolbar.shouldNotGroupWhenFull"),o=new E(this.locale,this.editing.view,{editableElement:this.sourceElement,shouldToolbarGroupWhenFull:n,label:this.config.get("label")});this.ui=new y(this,o)}destroy(){const t=this.getData();return this.ui.destroy(),super.destroy().then(()=>{this.sourceElement&&this.updateSourceElement(t)})}static create(t,i={}){return new Promise(n=>{if(s(t)&&t.tagName==="TEXTAREA")throw new a("editor-wrong-element",null);const o=new this(t,i);n(o.initPlugins().then(()=>o.ui.init()).then(()=>o.data.init(o.config.get("initialData"))).then(()=>o.fire("ready")).then(()=>o))})}}function R(e){return s(e)?h(e):e}function s(e){return v(e)}export{P as DecoupledEditor};
