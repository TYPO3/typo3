import{Editor as b,secureSourceElement as R}from"@ckeditor/ckeditor5-core";import{CKEditorError as c,logWarning as y,setDataInElement as w,getDataFromElement as E}from"@ckeditor/ckeditor5-utils";import{EditorUI as v,EditorUIView as p,ToolbarView as O,MenuBarView as _,InlineEditableUIView as k}from"@ckeditor/ckeditor5-ui";import{enablePlaceholder as A}from"@ckeditor/ckeditor5-engine";/**
* @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
* For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
*/class j extends v{view;_lastFocusedEditableElement;constructor(t,e){super(t),this.view=e,this._lastFocusedEditableElement=null}init(){this.view.render(),this.focusTracker.on("change:focusedElement",(e,o,i)=>{for(const n of Object.values(this.view.editables))i===n.element&&(this._lastFocusedEditableElement=n.element)}),this.focusTracker.on("change:isFocused",(e,o,i)=>{i||(this._lastFocusedEditableElement=null)});for(const e of Object.values(this.view.editables))this.addEditable(e);this._initToolbar(),this.initMenuBar(this.view.menuBarView),this.fire("ready")}addEditable(t,e){const o=t.element;this.editor.editing.view.attachDomRoot(o,t.name),this.setEditableElement(t.name,o),t.bind("isFocused").to(this.focusTracker,"isFocused",this.focusTracker,"focusedElement",(i,n)=>i?n===o?!0:this._lastFocusedEditableElement===o:!1),this._initPlaceholder(t,e)}removeEditable(t){const e=this.editor.editing.view;e.getDomRoot(t.name)&&e.detachDomRoot(t.name),t.unbind("isFocused"),this.removeEditableElement(t.name)}destroy(){super.destroy();for(const t of Object.values(this.view.editables))this.removeEditable(t);this.view.destroy()}_initToolbar(){const t=this.editor,e=this.view;e.toolbar.fillFromConfig(t.config.get("toolbar"),this.componentFactory),this.addToolbar(e.toolbar)}_initPlaceholder(t,e){if(!e){const n=this.editor.config.get("placeholder");n&&(e=typeof n=="string"?n:n[t.name])}const o=this.editor.editing.view,i=o.document.getRoot(t.name);e&&(i.placeholder=e),A({view:o,element:i,isDirectHost:!1,keepOnFocus:!0})}}/**
* @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
* For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
*/class F extends p{toolbar;editables;editable;menuBarView;_editingView;constructor(t,e,o,i={}){super(t),this._editingView=e,this.toolbar=new O(t,{shouldGroupWhenFull:i.shouldToolbarGroupWhenFull}),this.menuBarView=new _(t),this.editables={};for(const n of o){const l=i.editableElements?i.editableElements[n]:void 0;let{label:r}=i;typeof r=="object"&&(r=r[n]),this.createEditable(n,l,r)}this.editable=Object.values(this.editables)[0],this.toolbar.extendTemplate({attributes:{class:["ck-reset_all","ck-rounded-corners"],dir:t.uiLanguageDirection}}),this.menuBarView.extendTemplate({attributes:{class:["ck-reset_all","ck-rounded-corners"],dir:t.uiLanguageDirection}})}createEditable(t,e,o){const i=new k(this.locale,this._editingView,e,{label:o});return this.editables[t]=i,i.name=t,this.isRendered&&this.registerChild(i),i}removeEditable(t){const e=this.editables[t];this.isRendered&&this.deregisterChild(e),delete this.editables[t],e.destroy()}render(){super.render(),this.registerChild(Object.values(this.editables)),this.registerChild(this.toolbar),this.registerChild(this.menuBarView)}}function T(a){return typeof a=="object"&&a!==null}function D(a){if(typeof a!="object"||a==null)return!1;if(Object.getPrototypeOf(a)===null)return!0;if(Object.prototype.toString.call(a)!=="[object Object]"){const e=a[Symbol.toStringTag];return e==null||!Object.getOwnPropertyDescriptor(a,Symbol.toStringTag)?.writable?!1:a.toString()===`[object ${e}]`}let t=a;for(;Object.getPrototypeOf(t)!==null;)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(a)===t}function N(a){return T(a)&&a.nodeType===1&&!D(a)}/**
* @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
* For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options
*/class V extends b{static get editorName(){return"MultiRootEditor"}ui;sourceElements;_registeredRootsAttributesKeys=new Set;_readOnlyRootLocks=new Map;constructor(t,e={}){const o=Object.keys(t),i=o.length===0||typeof t[o[0]]=="string";if(i&&e.initialData!==void 0&&Object.keys(e.initialData).length>0)throw new c("editor-create-initial-data",null);if(super(e),i?this.sourceElements={}:this.sourceElements=t,this.config.get("initialData")===void 0){const r={};for(const s of o)r[s]=I(t[s]);this.config.set("initialData",r)}if(!i)for(const r of o)R(this,t[r]);this.editing.view.document.roots.on("add",(r,s)=>{s.unbind("isReadOnly"),s.bind("isReadOnly").to(this.editing.view.document,"isReadOnly",d=>d||this._readOnlyRootLocks.has(s.rootName)),s.on("change:isReadOnly",(d,h,f)=>{const m=this.editing.view.createRangeIn(s);for(const u of m.getItems())u.is("editableElement")&&(u.unbind("isReadOnly"),u.isReadOnly=f)})});for(const r of o)this.model.document.createRoot("$root",r);if(this.config.get("lazyRoots"))for(const r of this.config.get("lazyRoots")){const s=this.model.document.createRoot("$root",r);s._isLoaded=!1}if(this.config.get("rootsAttributes")){const r=this.config.get("rootsAttributes");for(const[s,d]of Object.entries(r)){if(!this.model.document.getRoot(s))throw new c("multi-root-editor-root-attributes-no-root",null);for(const h of Object.keys(d))this.registerRootAttribute(h)}this.data.on("init",()=>{this.model.enqueueChange({isUndoable:!1},s=>{for(const[d,h]of Object.entries(r)){const f=this.model.document.getRoot(d);for(const[m,u]of Object.entries(h))u!==null&&s.setAttribute(m,u,f)}})})}const n={shouldToolbarGroupWhenFull:!this.config.get("toolbar.shouldNotGroupWhenFull"),editableElements:i?void 0:t,label:this.config.get("label")},l=new F(this.locale,this.editing.view,o,n);this.ui=new j(this,l),this.model.document.on("change:data",()=>{const r=this.model.document.differ.getChangedRoots();for(const s of r){const d=this.model.document.getRoot(s.name);s.state=="detached"&&this.fire("detachRoot",d)}for(const s of r){const d=this.model.document.getRoot(s.name);s.state=="attached"&&this.fire("addRoot",d)}}),this.listenTo(this.model,"canEditAt",(r,[s])=>{if(!s)return;let d=!1;for(const h of s.getRanges()){const f=h.root;if(this._readOnlyRootLocks.has(f.rootName)){d=!0;break}}d&&(r.return=!1,r.stop())},{priority:"high"}),this.decorate("loadRoot"),this.on("loadRoot",(r,[s])=>{const d=this.model.document.getRoot(s);if(!d)throw new c("multi-root-editor-load-root-no-root",this,{rootName:s});d._isLoaded&&(y("multi-root-editor-load-root-already-loaded"),r.stop())},{priority:"highest"})}destroy(){const t=this.config.get("updateSourceElementOnDestroy"),e={};for(const o of Object.keys(this.sourceElements))e[o]=t?this.getData({rootName:o}):"";return this.ui.destroy(),super.destroy().then(()=>{for(const o of Object.keys(this.sourceElements))w(this.sourceElements[o],e[o])})}addRoot(t,{data:e="",attributes:o={},elementName:i="$root",isUndoable:n=!1}={}){const l=r=>{const s=r.addRoot(t,i);e&&r.insert(this.data.parse(e,s),s,0);for(const d of Object.keys(o))this.registerRootAttribute(d),r.setAttribute(d,o[d],s)};n?this.model.change(l):this.model.enqueueChange({isUndoable:!1},l)}detachRoot(t,e=!1){e?this.model.change(o=>o.detachRoot(t)):this.model.enqueueChange({isUndoable:!1},o=>o.detachRoot(t))}createEditable(t,e,o){const i=this.ui.view.createEditable(t.rootName,void 0,o);return this.ui.addEditable(i,e),this.editing.view.forceRender(),i.element}detachEditable(t){const e=t.rootName,o=this.ui.view.editables[e];return this.ui.removeEditable(o),this.ui.view.removeEditable(e),o.element}loadRoot(t,{data:e="",attributes:o={}}={}){const i=this.model.document.getRoot(t);this.model.enqueueChange({isUndoable:!1},n=>{e&&n.insert(this.data.parse(e,i),i,0);for(const l of Object.keys(o))this.registerRootAttribute(l),n.setAttribute(l,o[l],i);i._isLoaded=!0,this.model.document.differ._bufferRootLoad(i)})}getFullData(t){const e={};for(const o of this.model.document.getRootNames())e[o]=this.data.get({...t,rootName:o});return e}getRootsAttributes(){const t={};for(const e of this.model.document.getRootNames())t[e]=this.getRootAttributes(e);return t}getRootAttributes(t){const e={},o=this.model.document.getRoot(t);for(const i of this._registeredRootsAttributesKeys)e[i]=o.hasAttribute(i)?o.getAttribute(i):null;return e}registerRootAttribute(t){this._registeredRootsAttributesKeys.has(t)||(this._registeredRootsAttributesKeys.add(t),this.editing.model.schema.extend("$root",{allowAttributes:t}))}disableRoot(t,e){if(t=="$graveyard")throw new c("multi-root-editor-cannot-disable-graveyard-root",this);const o=this._readOnlyRootLocks.get(t);if(o)o.add(e);else{this._readOnlyRootLocks.set(t,new Set([e]));const i=this.editing.view.document.getRoot(t);i.isReadOnly=!0,Array.from(this.commands.commands()).forEach(n=>n.affectsData&&n.refresh())}}enableRoot(t,e){const o=this._readOnlyRootLocks.get(t);if(!(!o||!o.has(e)))if(o.size===1){this._readOnlyRootLocks.delete(t);const i=this.editing.view.document.getRoot(t);i.isReadOnly=this.isReadOnly,Array.from(this.commands.commands()).forEach(n=>n.affectsData&&n.refresh())}else o.delete(e)}static create(t,e={}){return new Promise(o=>{for(const n of Object.values(t))if(g(n)&&n.tagName==="TEXTAREA")throw new c("editor-wrong-element",null);const i=new this(t,e);o(i.initPlugins().then(()=>i.ui.init()).then(()=>(i._verifyRootsWithInitialData(),i.data.init(i.config.get("initialData")))).then(()=>i.fire("ready")).then(()=>i))})}_verifyRootsWithInitialData(){const t=this.config.get("initialData");for(const e of this.model.document.getRootNames())if(!(e in t))throw new c("multi-root-editor-root-initial-data-mismatch",null);for(const e of Object.keys(t)){const o=this.model.document.getRoot(e);if(!o||!o.isAttached())throw new c("multi-root-editor-root-initial-data-mismatch",null)}}}function I(a){return g(a)?E(a):a}function g(a){return N(a)}export{V as MultiRootEditor};
