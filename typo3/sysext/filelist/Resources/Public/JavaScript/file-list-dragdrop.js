/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import RegularEvent from"@typo3/core/event/regular-event.js";import{MultiRecordSelectionSelectors}from"@typo3/backend/multi-record-selection.js";import{FileListActionSelector,FileListActionUtility}from"@typo3/filelist/file-list-actions.js";import{DataTransferTypes}from"@typo3/backend/enum/data-transfer-types.js";export var FileListDragDropEvent;!function(e){e.transfer="typo3:filelist:resource:dragdrop:transfer"}(FileListDragDropEvent||(FileListDragDropEvent={}));class FileListDragDrop{constructor(){this.previewSize=32;const e=FileListActionSelector.elementSelector+'[draggable="true"]';new RegularEvent("dragstart",((e,t)=>{const r=[];let i="",s="";const l=document.querySelectorAll(MultiRecordSelectionSelectors.checkboxSelector+":checked");if(l.length)l.forEach((e=>{if(e.checked){const t=e.closest(FileListActionSelector.elementSelector);t.dataset.filelistDragdropTransferItem="true";const l=FileListActionUtility.getResourceForElement(t);r.push(l),s=t.dataset.filelistName,i=t.dataset.filelistIcon}}));else{const e=t.closest(FileListActionSelector.elementSelector);e.dataset.filelistDragdropTransferItem="true";const l=FileListActionUtility.getResourceForElement(e);r.push(l),s=e.dataset.filelistName,i=e.dataset.filelistIcon}e.dataTransfer.effectAllowed="move",e.dataTransfer.setData(DataTransferTypes.falResources,JSON.stringify(r));const o={tooltipIconIdentifier:r.length>1?"apps-clipboard-images":i,tooltipLabel:r.length>1?this.getPreviewLabel(r):s,thumbnails:this.getPreviewItems(r)};e.dataTransfer.setData(DataTransferTypes.dragTooltip,JSON.stringify(o))})).delegateTo(document,e),new RegularEvent("dragover",((e,t)=>{const r=FileListActionUtility.getResourceForElement(t);this.isDropAllowedOnResoruce(r)&&(e.dataTransfer.dropEffect="move",e.preventDefault(),t.classList.add("success"))}),{capture:!0}).delegateTo(document,e),new RegularEvent("drop",((e,t)=>{const r={action:"transfer",resources:JSON.parse(e.dataTransfer.getData(DataTransferTypes.falResources)??"{}"),target:FileListActionUtility.getResourceForElement(t)};top.document.dispatchEvent(new CustomEvent(FileListDragDropEvent.transfer,{detail:r}))}),{capture:!0,passive:!0}).delegateTo(document,e),new RegularEvent("dragend",(()=>{this.reset()}),{capture:!0,passive:!0}).delegateTo(document,e),new RegularEvent("dragleave",((e,t)=>{t.classList.remove("success")}),{capture:!0,passive:!0}).delegateTo(document,e)}getPreviewItems(e){return e.filter((e=>null!==e.thumbnail)).map((e=>({src:e.thumbnail,width:this.previewSize,height:this.previewSize})))}getPreviewLabel(e){const t=e.filter((e=>null!==e.thumbnail)),r=e.length-t.length;return r>0?(t.length>0?"+":"")+r.toString():""}reset(){document.querySelectorAll(FileListActionSelector.elementSelector).forEach((e=>{delete e.dataset.filelistDragdropTransferItem,e.classList.remove("success")}))}isDropAllowedOnResoruce(e){return!("filelistDragdropTransferItem"in document.querySelector(FileListActionSelector.elementSelector+'[data-filelist-identifier="'+e.identifier+'"]').dataset)&&"folder"===e.type}}export default new FileListDragDrop;