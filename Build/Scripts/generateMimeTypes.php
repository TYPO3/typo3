#!/usr/bin/env php
<?php

declare(strict_types=1);

/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */

$dbJson = file_get_contents(dirname(__DIR__) . '/node_modules/mime-db/db.json');
$dbJson = json_decode($dbJson, true);

$mimeTypeMapping = [];
$mimeTypeString = '';
foreach ($dbJson as $mimeType => $mimeTypeInfo) {
    if (isset($mimeTypeInfo['extensions'])) {
        $mimeTypeMapping[$mimeType] = $mimeTypeInfo['extensions'];
    }
}

// @todo: add our own file extensions here

// see https://www.rfc-editor.org/rfc/rfc9512.html
if (!isset($mimeTypeMapping['application/yaml'])) {
    $mimeTypeMapping['application/yaml'] = ['yaml', 'yml'];
}

// Hotfix(es) for remapping cases. "mime-db" package might sometimes prefer "Apache" sources instead of
// "IANA" (RFC). PHP's MIME functionality usually operates on the latter. This should only be added
// for temporary messages; upstream fixes are preferred.

// @todo Remove when/if https://github.com/jshttp/mime-db/issues/388 gets resolved
// Note, we now have "text/vcard" AND "text/x-vcard" in our structure, this is intentional to not need
// migration wizards for compatibility (for now)
$mimeTypeMapping['text/vcard'] = ['vcard', 'vcf'];

ksort($mimeTypeMapping);

foreach ($mimeTypeMapping as $mimeType => $extensionInfo) {
    $mimeTypeString .= "        '" . $mimeType . "' => ['" . implode("', '", $extensionInfo) . "'],
";
}

$classTemplate = '<?php

declare(strict_types=1);

/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */

namespace TYPO3\CMS\Core\Resource;

/**
 * This class contains a list of all available / known mimetypes and file extensions,
 * and is automatically generated by TYPO3 via Core/Build/Scripts/generateMimeTypes.php
 */
final class MimeTypeCollection
{
    private $map = [
' . rtrim($mimeTypeString, ',') .
'    ];

    /**
     * @return array<string, List<string>>
     */
    public function getMap(): array
    {
        return $this->map;
    }

    /**
     * @return List<string>
     */
    public function getMimeTypes(): array
    {
        return array_keys($this->map);
    }
}
';

file_put_contents(dirname(dirname(__DIR__)) . '/typo3/sysext/core/Classes/Resource/MimeTypeCollection.php', $classTemplate);
