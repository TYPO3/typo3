$svgColors: (
    border: #d7d7d7,
    lines: #ddd,
    nodeSelectedBg: #fff,
    nodeHighlightText: #0078e6,
    nodeOverBg: #f2f2f2,
    dragOverBg: #d7e4f1,
    dragOverBorder: transparent,
    dragAlertBg: #f6d3cf,
    dragAlertBorder: #d66c68,
    dragAboveBg: transparent,
    dragAboveBorder: transparent,
    dragBetweenBg: transparent,
    dragBetweenBorder: transparent,
    dragBelowBg: transparent,
    dragBelowBorder: transparent,
    dragTooltipBg: #d7e4f1,
    dragTooltipAlertBg: #f6d3cf,
    dragTooltipAlertBorder: #d66c68
);

.svg-tree {
    position: relative;
}

.svg-tree-loader {
    display: none;
    position: absolute;
    width: 100%;
    height: calc(100% - #{$module-docheader-height});
    top: $module-docheader-height;
    left: 0;
    text-align: center;
    background: rgba(0, 0, 0, 0.3);
    z-index: 3000;
    user-select: none;

    .element-browser & {
        height: calc(100% - 39px);
        top: 39px;
    }

    & > * {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
    }
}

.node-loader {
    display: none;
    position: absolute;
    width: 100%;
    height: 20px;
    top: 0;
    left: 0;
    text-align: center;
    background: rgba(0, 0, 0, 0.3);
    z-index: 3000;

    & > * {
        position: absolute;
        top: 0;
        bottom: 0;
        right: 10px;
        margin: auto;
    }
}

.svg-tree-element {
    display: flex;
    flex-direction: column;

    & > .svg-tree-wrapper {
        flex: 1 0 0;
    }

    typo3-backend-form-selecttree-toolbar {
        display: block;
        background-color: #fafafa;
        position: sticky;
        top: 0;
    }
}

.svg-tree-wrapper {
    display: block;
    position: relative;
    overflow-y: scroll;

    & > svg {
        margin-top: 15px;
    }

    path.link {
        fill: none;
        shape-rendering: crispEdges;
        stroke: map_get($svgColors, lines);
        stroke-width: 1;
        pointer-events: none;
    }

    .node {
        &-bg {
            fill: transparent;

            &__border {
                display: none;
                pointer-events: none;
                fill: #9eb2c5;
            }

            &.ver-element,
            &.ver-versions,
            &.ver-page {
                fill: #f7c898 !important;
            }
        }

        &-over:not(.node-selected) {
            fill: map_get($svgColors, nodeOverBg);
            stroke-width: 1px;
            stroke: map_get($svgColors, border);
        }

        &-selected {
            fill: map_get($svgColors, nodeSelectedBg);
            stroke-width: 1px;
            stroke: map_get($svgColors, border);
        }
    }

    .nodes {
        &-wrapper {
            $b: '.nodes-wrapper';

            cursor: pointer;

            &--dragging {
                cursor: grabbing;

                .node-over {
                    //it must be important because there is inline style in code that we must overwrite
                    fill: map_get($svgColors, dragOverBg) !important;
                    stroke-width: 1px;
                    stroke: map_get($svgColors, dragOverBorder);
                }

                .node-alert {
                    //it must be important because there is inline style in code that we must overwrite
                    fill: map_get($svgColors, dragAlertBg) !important;
                    stroke: map_get($svgColors, dragAlertBorder);
                }

                &#{$b}--nodrop {
                    .node-over {
                        //it must be important because there is inline style in code that we must overwrite
                        fill: map_get($svgColors, dragAlertBg) !important;
                    }
                }

                &#{$b}--ok-above {
                    .node-over {
                        //it must be important because there is inline style in code that we must overwrite
                        fill: map_get($svgColors, dragAboveBg) !important;
                        stroke: map_get($svgColors, dragAboveBorder);
                    }
                }

                &#{$b}--ok-between {
                    .node-over {
                        //it must be important because there is inline style in code that we must overwrite
                        fill: map_get($svgColors, dragBetweenBg) !important;
                        stroke: map_get($svgColors, dragBetweenBorder);
                    }
                }

                &#{$b}--ok-below {
                    .node-over {
                        //it must be important because there is inline style in code that we must overwrite
                        fill: map_get($svgColors, dragBelowBg) !important;
                        stroke: map_get($svgColors, dragBelowBorder);
                    }
                }
            }

            &--nodrop {
                cursor: no-drop;
            }
        }
    }
}

//node drag & drop tooltip
.node-dd {
    position: fixed;
    display: none;
    padding: 0;
    margin: 0;
    border: none;
    background-color: map_get($svgColors, dragTooltipBg);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    z-index: 9999;

    &--nodrop {
        background-color: map_get($svgColors, dragTooltipAlertBg);
        border: 1px solid map_get($svgColors, dragTooltipAlertBorder);

        & .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-place-denied.png);
        }
    }

    &__text {
        display: table;
        vertical-align: middle;
        opacity: 0.85;
        padding: 5px 5px 5px 20px;
    }

    &--ok-below {
        &.node-dd--copy .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-copy-below.png);
        }

        .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-move-below.png);
        }
    }

    &--ok-between {
        &.node-dd--copy .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-new-between.png);
        }

        .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-move-between.png);
        }
    }

    &--ok-append {
        &.node-dd--copy .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-new-inside.png);
        }

        .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-move-into.png);
        }
    }

    &--ok-above {
        &.node-dd--copy .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-copy-above.png);
        }

        .node-dd__ctrl-icon {
            background-image: url(../../../../backend/Resources/Public/Images/pagetree-drag-move-above.png);
        }
    }

    &__icon {
        display: table-cell;
        vertical-align: top;
        padding-left: 3px;
        padding-right: 3px;
    }

    &__name {
        display: table-cell;
        vertical-align: top;
    }

    &__ctrl-icon {
        position: absolute;
        top: 3px;
        left: 3px;
        display: block;
        width: 16px;
        height: 16px;
        background-color: transparent;
        background-position: center;
        background-repeat: no-repeat;
        z-index: 1;
    }
}

.nodes-drop-zone {
    &[data-open='false']:not(.animating) {
        display: none;
    }

    rect {
        fill: map_get($svgColors, dragAlertBorder);
        cursor: grabbing;
    }

    text {
        pointer-events: none;
    }
}

.node-name {
    .node-highlight-text {
        fill: map_get($svgColors, nodeHighlightText);
        font-weight: 700;
    }
}

.node-edit {
    position: absolute;
    top: 0;
    left: 0;
}

.scaffold-content .svg-toolbar {
    min-height: $module-docheader-height;
}

.svg-toolbar {
    padding: 4px 10px 0;
    border-bottom: 1px solid $module-docheader-border;
    background-color: $module-docheader-bg;

    .btn-toolbar {
        padding: 0 0.25rem;
    }

    &__menu {
        margin: 0.125rem 0 0.375rem;
        padding-right: 32px;
        display: flex;

        .svg-toolbar__search {
            flex: 1 0 auto;
            margin: 0 0.5rem 0 0.25rem;
        }
    }

    &__menuitem {
        display: inline-block;
        padding: 0.25rem;
        border: none;
        background: 0 0;
        font-size: 11px;
    }

    &__drag-node {
        cursor: move;
    }

    &__submenu {
        margin: 0.125rem 0;
    }
}

.node-stop {
    fill: map_get($svgColors, dragAlertBorder);
}

.node-mount-point {
    display: flex;
    border: 0;
    background-color: $info;
    color: #fff;
    padding: 1em;

    &__icon {
        flex: 0 auto;

        &.mountpoint-close {
            cursor: pointer;
        }
    }

    &__text {
        flex: 1 0 0;
        padding: 0 0.5em;
        overflow: hidden;
    }
}

.node-action {
    opacity: 0;
    cursor: pointer;

    rect {
        opacity: 0;
    }

    &.node-action-over {
        opacity: 1;

        rect {
            opacity: 1;
        }
    }
}
