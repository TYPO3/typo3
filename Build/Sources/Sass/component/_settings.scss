:root {
    --settings-color: var(--typo3-component-color);
    --settings-padding: calc(var(--typo3-spacing) * 2);
    --settings-bg: var(--typo3-component-bg);
    --settings-border-width: var(--typo3-component-border-width);
    --settings-border-color: var(--typo3-component-border-color);
    --settings-border-radius: var(--typo3-component-border-radius);
    --settings-box-shadow: var(--typo3-component-box-shadow);
    --settings-highlight: var(--typo3-component-primary-color);
    --settings-indicator-bg: transparent;
    --settings-item-color: var(--settings-color);
    --settings-item-bg: var(--settings-bg);
}

.settings-container {
    container-type: inline-size;
    margin-top: 1.5rem;
}

.settings {
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    color: var(--settings-color);
    box-shadow: var(--settings-box-shadow);

    &-navigation,
    &-body {
        padding: var(--settings-padding);
    }

    &-body {
        background: var(--settings-bg);
        border: var(--settings-border-width) solid var(--settings-border-color);
        border-radius: var(--settings-border-radius);
    }

    &-navigation {
        border-inline-start: var(--settings-border-width) solid var(--settings-border-color);
        border-inline-end: var(--settings-border-width) solid var(--settings-border-color);
        border-top: var(--settings-border-width) solid var(--settings-border-color);
        border-bottom: 0;
        flex: 1 1 auto;
    }
}

/* clean-css ignore:start */
@container (min-width: 780px) {
    .settings {
        flex-wrap: nowrap;
        box-shadow: none;

        &-body {
            flex: 1 1 auto;
            border-inline-start: var(--settings-border-width) solid var(--settings-border-color);
            border-start-start-radius: 0;
            box-shadow: var(--settings-box-shadow);
        }

        &-navigation {
            box-shadow: var(--settings-box-shadow);
            flex: 0 0 300px;
            position: sticky;
            top: 0;
            border-inline-end: 0;
            border-inline-start: var(--settings-border-width) solid var(--settings-border-color);
            border-top: var(--settings-border-width) solid var(--settings-border-color);
            border-bottom: var(--settings-border-width) solid var(--settings-border-color);
        }
    }
}

/* clean-css ignore:end */

.settings-navigation {
    ul {
        list-style: none;
        margin: 0;
        padding: 0;

        ul {
            padding-inline-start: 1rem;
        }
    }
}

.settings-navigation-item {
    color: var(--typo3-component-color);
    position: relative;
    display: flex;
    border-radius: calc(var(--typo3-component-border-radius) - var(--typo3-component-border-width));
    gap: .5em;
    padding: var(--typo3-list-item-padding-y) var(--typo3-list-item-padding-x);
    cursor: pointer;
    text-decoration: none;

    &.active,
    &:hover,
    &:focus {
        z-index: 1;
        outline-offset: -1px;
    }

    &:hover {
        color: var(--typo3-component-hover-color);
        background-color: var(--typo3-component-hover-bg);
        outline: 1px solid var(--typo3-component-hover-border-color);
    }

    &.active,
    &:focus {
        color: var(--typo3-component-focus-color);
        background-color: var(--typo3-component-focus-bg);
        outline: 1px solid var(--typo3-component-focus-border-color);
    }

    &-icon {
        user-select: none;
        flex-shrink: 0;
        flex-grow: 0;
        width: var(--icon-size-small);
    }

    &-label {
        user-select: none;
        flex-grow: 1;
    }
}

.settings-category {
    max-width: 600px;
    text-wrap: balance;

    &-list + &-list {
        margin-top: calc(var(--typo3-spacing) * 2);
    }
}

.settings-item {
    position: relative;
    color: var(--settings-item-color);
    background: var(--settings-item-bg);
    border-radius: calc(var(--settings-border-radius) / 2);
    padding-block: var(--typo3-component-padding-y);
    padding-inline-start: calc(var(--typo3-component-padding-x) + 4px);
    padding-inline-end: calc(var(--typo3-component-padding-x) + 3rem);
    margin-inline-start: calc(-1 * var(--typo3-component-padding-x));
    margin-inline-end: calc(-1 * var(--typo3-component-padding-x));

    &:focus-within,
    &:focus-within * {
        --settings-item-bg: var(--typo3-component-focus-bg);
        --settings-item-color: var(--typo3-component-focus-color);
    }

    &:focus-within {
        outline-offset: -1px;
        outline: 1px solid var(--typo3-component-focus-border-color);
    }

    &:hover,
    &:focus,
    &:focus-within {
        .settings-item-actions {
            opacity: 1;
        }
    }

    &-indicator {
        position: absolute;
        background: var(--settings-indicator-bg);
        inset-inline-start: 1px;
        inset-block-start: 1px;
        inset-block-end: 1px;
        width: 4px;
        border-radius: 0;
    }

    &[data-status="modified"],
    &[data-status="modified"] * {
        --settings-indicator-bg: #{$info};
    }

    &[data-status="error"],
    &[data-status="error"] * {
        --settings-indicator-bg: #{$danger};
    }

    &-actions {
        opacity: 0;
        position: absolute;
        display: flex;
        justify-content: center;
        inset-inline-end: 0;
        inset-block-start: 0;
        inset-block-end: 0;
        padding-block: var(--typo3-component-padding-y);
        width: 3rem;
        transition: opacity .3s ease-in-out;

        & > .dropdown > button {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: transparent;
            border: none;
            color: inherit;
            outline: none;
            width: 32px;
            height: 32px;
            padding: 0;
            margin-top: -4px;
            border-radius: 50%;

            &:hover {
                background: color-mix(in srgb, var(--settings-item-bg), var(--settings-item-color) 10%);
            }

            &:focus {
                background: color-mix(in srgb, var(--typo3-component-focus-bg), var(--typo3-component-focus-border-color) 20%);
                color: var(--typo3-component-focus-color);
            }

            &:after {
                display: none;
            }
        }
    }

    &-title {
        margin-bottom: calc(var(--typo3-spacing) / 2);
    }

    &-label {
        font-weight: bold;
        margin-bottom: calc(var(--typo3-spacing) * .25);
    }

    &-description {
        color: color-mix(in srgb, var(--settings-color), var(--settings-bg) 25%);
    }

    &-key {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-family: var(--typo3-font-family-code);
        color: var(--settings-highlight);
    }

    &-message {
        margin-top: calc(var(--typo3-spacing) / 2);

        &:empty {
            display: none;
        }
    }
}

:is(.settings-item-description, .settings-category-description) {
    :is(p, dl, ol, ul, blockquote, pre) {
        margin-bottom: calc(var(--typo3-spacing) * .25);
    }

    :is(ol, ul) {
        padding-left: 0;
        padding-right: 0;
        padding-inline-start: calc(var(--typo3-spacing) * .25 + 1rem);
    }

    blockquote {
        padding: calc(var(--typo3-spacing) * .25);
        padding-inline-start: calc(var(--typo3-spacing) * .5);
        border-inline-start: .25rem solid color-mix(in srgb, var(--typo3-text-color-base), transparent 75%);
        margin-bottom: calc(var(--typo3-spacing) * .25);
    }

    code {
        padding: .2em .4em;
        white-space: break-spaces;
        background: light-dark(var(--token-color-neutral-7), var(--token-color-neutral-90));
        border-radius: var(--typo3-component-border-radius);
    }
}
